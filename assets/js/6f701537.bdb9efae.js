"use strict";(self.webpackChunkascii_ui=self.webpackChunkascii_ui||[]).push([[386],{3779:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"hooks/use-interval","title":"useInterval","description":"Run a callback function at a specified interval inside ascii-ui components.","source":"@site/docs/hooks/use_interval.md","sourceDirName":"hooks","slug":"/hooks/use-interval","permalink":"/ascii-ui-docs/docs/hooks/use-interval","draft":false,"unlisted":false,"editUrl":"https://github.com/rcasia/ascii-ui-docs/docs/hooks/use_interval.md","tags":[{"inline":true,"label":"api","permalink":"/ascii-ui-docs/docs/tags/api"},{"inline":true,"label":"hooks","permalink":"/ascii-ui-docs/docs/tags/hooks"},{"inline":true,"label":"effect","permalink":"/ascii-ui-docs/docs/tags/effect"},{"inline":true,"label":"interval","permalink":"/ascii-ui-docs/docs/tags/interval"},{"inline":true,"label":"timer","permalink":"/ascii-ui-docs/docs/tags/timer"}],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6,"id":"use-interval","title":"useInterval","sidebar_label":"useInterval","description":"Run a callback function at a specified interval inside ascii-ui components.","tags":["api","hooks","effect","interval","timer"]},"sidebar":"tutorialSidebar","previous":{"title":"useUserConfig","permalink":"/ascii-ui-docs/docs/hooks/use-user-config"},"next":{"title":"How Everything Works","permalink":"/ascii-ui-docs/docs/architecture"}}');var s=t(4848),a=t(8453);const l={sidebar_position:6,id:"use-interval",title:"useInterval",sidebar_label:"useInterval",description:"Run a callback function at a specified interval inside ascii-ui components.",tags:["api","hooks","effect","interval","timer"]},r="useInterval",c={},o=[{value:"Reference",id:"reference",level:2},{value:"<code>useInterval(callback, delay_ms)</code>",id:"useintervalcallback-delay_ms",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Usage",id:"usage",level:2},{value:"Example: Simple Interval Counter",id:"example-simple-interval-counter",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"useinterval",children:"useInterval"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"useInterval"})," lets you run a ",(0,s.jsx)(n.strong,{children:"callback function repeatedly"})," at a specified time interval (in milliseconds).\nIt automatically handles timer creation, cleanup, and updates when the delay changes."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"ui.hooks.useInterval(callback, delay_ms)\n"})}),"\n",(0,s.jsx)(n.h2,{id:"reference",children:"Reference"}),"\n",(0,s.jsx)(n.h3,{id:"useintervalcallback-delay_ms",children:(0,s.jsx)(n.code,{children:"useInterval(callback, delay_ms)"})}),"\n",(0,s.jsxs)(n.p,{children:["Call ",(0,s.jsx)(n.code,{children:"useInterval"})," at the top level of a component to execute a function ",(0,s.jsx)(n.strong,{children:"repeatedly"})," at a fixed time interval.\nWhen the component unmounts or the delay changes, the interval is ",(0,s.jsx)(n.strong,{children:"automatically cleaned up"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'ui.hooks.useInterval(function()\n  print("Tick!")\nend, 1000)\n'})}),"\n",(0,s.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"callback"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"function"})}),(0,s.jsx)(n.td,{children:"The function to execute at each interval. It will be called repeatedly on every tick."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"delay_ms"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number | nil"})}),(0,s.jsxs)(n.td,{children:["The interval delay in ",(0,s.jsx)(n.strong,{children:"milliseconds"}),". If ",(0,s.jsx)(n.code,{children:"nil"})," or ",(0,s.jsx)(n.code,{children:"<= 0"}),", the interval is ",(0,s.jsx)(n.strong,{children:"not started"}),". Changing this value will restart the timer with the new delay."]})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"returns",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"useInterval"})," does not return a value."]}),"\n",(0,s.jsxs)(n.p,{children:["Its purpose is to ",(0,s.jsx)(n.strong,{children:"schedule a repeating callback"})," that automatically cleans up when the component unmounts or when ",(0,s.jsx)(n.code,{children:"delay_ms"})," changes."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.h3,{id:"example-simple-interval-counter",children:"Example: Simple Interval Counter"}),"\n",(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.code,{children:"useInterval"})," to update state every few milliseconds."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'local ui = require("ascii-ui")\nlocal useState = ui.hooks.useState\nlocal useInterval = ui.hooks.useInterval\nlocal Paragraph = ui.components.Paragraph\n\nlocal Ticker = ui.createComponent("Ticker", function()\n  local count, setCount = useState(0)\n\n  useInterval(function()\n    setCount(function(prev) return prev + 1 end)\n  end, 1000) -- every 1 second\n\n  return {\n    Paragraph({ content = "Seconds elapsed: " .. count }),\n  }\nend)\n\nreturn Ticker\n'})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var i=t(6540);const s={},a=i.createContext(s);function l(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);