"use strict";(self.webpackChunkascii_ui=self.webpackChunkascii_ui||[]).push([[233],{8346:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Get Started","href":"/ascii-ui-docs/docs/intro","docId":"intro","unlisted":false},{"type":"link","label":"Create a Custom Component","href":"/ascii-ui-docs/docs/custom_components","docId":"custom_components","unlisted":false},{"type":"category","label":"Hooks","collapsible":true,"collapsed":false,"customProps":{"description":"Hooks overview"},"items":[{"type":"link","label":"useEffect","href":"/ascii-ui-docs/docs/hooks/use-effect","docId":"hooks/use-effect","unlisted":false},{"type":"link","label":"useFunctionRegistry [experimental]","href":"/ascii-ui-docs/docs/hooks/use-function-registry","docId":"hooks/use-function-registry","unlisted":false},{"type":"link","label":"useInterval","href":"/ascii-ui-docs/docs/hooks/use-interval","docId":"hooks/use-interval","unlisted":false},{"type":"link","label":"useReducer","href":"/ascii-ui-docs/docs/hooks/use-reducer","docId":"hooks/use-reducer","unlisted":false},{"type":"link","label":"useState","href":"/ascii-ui-docs/docs/hooks/use-state","docId":"hooks/use-state","unlisted":false},{"type":"link","label":"useTimeout","href":"/ascii-ui-docs/docs/hooks/use-timeout","docId":"hooks/use-timeout","unlisted":false},{"type":"link","label":"useUserConfig","href":"/ascii-ui-docs/docs/hooks/use-user-config","docId":"hooks/use-user-config","unlisted":false}],"href":"/ascii-ui-docs/docs/hooks/"},{"type":"link","label":"How Everything Works","href":"/ascii-ui-docs/docs/architecture","docId":"architecture","unlisted":false}]},"docs":{"architecture":{"id":"architecture","title":"How Everything Works","description":"ascii-ui.nvim is built on a declarative and reactive model, taking inspiration","sidebar":"tutorialSidebar"},"custom_components":{"id":"custom_components","title":"Create a Custom Component","description":"Intro","sidebar":"tutorialSidebar"},"hooks/hooks":{"id":"hooks/hooks","title":"Hooks in ascii-ui.nvim","description":"ascii-ui.nvim introduces hooks as a core mechanism for managing state, side effects, and behavioral reusability within functional UI components\u2014drawing inspiration from React\'s hooks. Hooks enable powerful, modular, and declarative UI development, allowing your components to be interactive and dynamic while keeping logic clean and localized.","sidebar":"tutorialSidebar"},"hooks/use-effect":{"id":"hooks/use-effect","title":"useEffect","description":"Run side effects inside ascii-ui components.","sidebar":"tutorialSidebar"},"hooks/use-function-registry":{"id":"hooks/use-function-registry","title":"useFunctionRegistry [experimental]","description":"Register Lua functions in a global registry for later invocation within ascii-ui components.","sidebar":"tutorialSidebar"},"hooks/use-interval":{"id":"hooks/use-interval","title":"useInterval","description":"Run a callback function at a specified interval inside ascii-ui components.","sidebar":"tutorialSidebar"},"hooks/use-reducer":{"id":"hooks/use-reducer","title":"useReducer","description":"Manage complex state logic inside ascii-ui components with a reducer function.","sidebar":"tutorialSidebar"},"hooks/use-state":{"id":"hooks/use-state","title":"useState","description":"Manage local state inside ascii-ui components.","sidebar":"tutorialSidebar"},"hooks/use-timeout":{"id":"hooks/use-timeout","title":"useTimeout","description":"Run a callback function once after a specified delay inside ascii-ui components.","sidebar":"tutorialSidebar"},"hooks/use-user-config":{"id":"hooks/use-user-config","title":"useUserConfig","description":"Access the current user configuration inside ascii-ui components.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Get Started","description":"This docs are still in progress, but you can already start using the library.","sidebar":"tutorialSidebar"}}}}')}}]);